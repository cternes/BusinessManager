<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2012 Christian Ternes and Thorsten Volland
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
    http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

    <global-method-security pre-post-annotations="enabled">
    </global-method-security>

    <http use-expressions="true">
    	<!-- Restrict access to pages in folder /views. Most specific rule on top! -->
        <intercept-url pattern="/views/**" access="isAuthenticated()" />
        <intercept-url pattern="/**" access="permitAll()" />
	
        <form-login login-page="/login.jsf" />
        <logout />
        <remember-me />
        
        <session-management invalid-session-url="/logmein/">
        </session-management>
    </http>
    
    <!-- We use a database as authentication provider -->
    <authentication-manager>
         <authentication-provider user-service-ref="jdbcUserService">
         	<password-encoder hash="md5">
				<salt-source ref="saltSource" />
         	</password-encoder>
         </authentication-provider>
    </authentication-manager>
    
     <!-- Spring-Security jdbc user dao -->
	<beans:bean id="jdbcUserService" class="org.businessmanager.dao.security.UserDetailsDaoImpl">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="enableGroups" value="true" />
		<beans:property name="enableAuthorities" value="false" />
		<beans:property name="groupAuthoritiesByUsernameQuery">
			<beans:value>SELECT G.ID, G.NAME, P.NAME
			FROM GROUPS G
			JOIN GROUP_MEMBERS GM on G.id = GM.groups_id
			JOIN USERS U on U.id = GM.members_id
			JOIN GROUP_PERMISSIONS GP ON GP.groups_id = G.id
			JOIN PERMISSIONS P ON P.id = GP.permissions_id
			WHERE U.username=? and U.modificationType!='DELETE'
			</beans:value>
		</beans:property>
		<beans:property name="usersByUsernameQuery">
			<beans:value>SELECT username,password,enabled 
            FROM USERS 
            WHERE username=? and modificationType!='DELETE'</beans:value>
		</beans:property>
	</beans:bean>
	
	<!-- Spring-Security Salt. This must NOT be changed. -->
	<beans:bean class="org.springframework.security.authentication.dao.ReflectionSaltSource" id="saltSource">
		<beans:property name="userPropertyToUse" value="salt"/>
	</beans:bean>
</beans:beans>
